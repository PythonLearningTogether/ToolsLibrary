# py version >= 3.6
import yaml  # pip install PyYAML
from collections import OrderedDict


def represent_ordered_dict(dumper, data):
    # https://stackoverflow.com/questions/16782112/
    value = []

    for item_key, item_value in data.items():
        node_key = dumper.represent_data(item_key)
        node_value = dumper.represent_data(item_value)

        value.append((node_key, node_value))

    return yaml.nodes.MappingNode('tag:yaml.org,2002:map', value)


yaml.add_representer(OrderedDict, represent_ordered_dict)


def traverse(obj):
    def _traverse(_obj):
        if isinstance(_obj, dict):
            return OrderedDict({k: _traverse(v) for k, v in _obj.items()})
        elif isinstance(_obj, list):
            return [_traverse(elem) for elem in _obj]
        else:
            return _obj

    return _traverse(obj)


d = {
    "defaults": {
        "env": {
            "b": [2, 2, 2],
            "a": 1,
            "c": 3,
        }
    }

}

expected = """defaults:
  env:
    b:
    - 2
    - 2
    - 2
    a: 1
    c: 3
"""

assert yaml.dump(traverse(d)) == expected
